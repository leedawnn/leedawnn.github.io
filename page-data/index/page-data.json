{"componentChunkName":"component---src-pages-index-jsx","path":"/","result":{"data":{"site":{"siteMetadata":{"title":"leedawn"}},"allMarkdownRemark":{"group":[{"fieldValue":"CSR","totalCount":1},{"fieldValue":"ISR","totalCount":1},{"fieldValue":"MPA","totalCount":1},{"fieldValue":"SPA","totalCount":1},{"fieldValue":"SSG","totalCount":1},{"fieldValue":"SSR","totalCount":2},{"fieldValue":"components","totalCount":2},{"fieldValue":"cookie","totalCount":1},{"fieldValue":"jwt","totalCount":1},{"fieldValue":"login","totalCount":1},{"fieldValue":"nextJs","totalCount":1},{"fieldValue":"pure function","totalCount":1},{"fieldValue":"react","totalCount":2},{"fieldValue":"session","totalCount":1}],"nodes":[{"excerpt":"","fields":{"slug":"/nextjs-rendering/"},"frontmatter":{"date":"March 05, 2024","update":"Mar 05, 2024","title":"↗️ Next.js의 렌더링 방식 이해하기","description":"SSR, SSG, ISR","tags":["nextJs","SSR","SSG","ISR"]}},{"excerpt":"MPA(Multiple Page Application)이란? 여러 개의 Page로 구성된 Application이다. MAP는 SSR 방식으로 렌더링한다.\n새로운 페이지를 요청할 때마다 서버에서 렌더링된 정적 리소스(HTML, CSS, Javascript)가 다운로드된다. 페이지를 이동하거나 새로고침하면 전체 페이지를 다시 렌더링한다. MPA의 장점 SEO…","fields":{"slug":"/spa-mpa/"},"frontmatter":{"date":"March 05, 2024","update":"Mar 05, 2024","title":"🤔 SPA vs MPA와 SSR vs CSR","description":"SPA와 MAP 그리고 SSR과 CSR의 차이점","tags":["MPA","SPA","CSR","SSR"]}},{"excerpt":"순수 함수란 무엇인가? 순수 함수란 사이드 이펙트가 없는 함수, 즉 함수의 실행이 외부에 영향을 끼치지 않는 함수를 뜻하고 입력으로 전달된 값을 수정하지 않는 불변성을 가지고 있다. 따라서 순수함수는 어떠한 전달인자가 주어지더라도 항상 똑같은 값이 리턴됨을 보장한다. 사이드 이펙트를 만들지 않는다. 함수는 입력받은 값만을 가지고 결과를 반환하며, 그 외 …","fields":{"slug":"/pure-components/"},"frontmatter":{"date":"March 04, 2024","update":"Mar 04, 2024","title":"🐳 React에서의 순수 컴포넌트","description":"컴포넌트 순수하게 유지하기","tags":["react","pure function","components"]}},{"excerpt":"로그인을 구현할 때 어떤 방법이 있을까? 프론트엔드에서 로그인을 구현하는 방법에는 여러 가지가 있다. 세션 기반 인증 : 사용자가 로그인을 하면 서버는 사용자의 정보를 세션에 저장하고, 클라이언트에 세션 ID를 쿠키로 전송한다. 클라이언트는 이 쿠키를 보관하고 있다가 다음 요청 시 쿠키를 함께 보내 서버에서 인증을 받는다. 서버는 세션 ID를 통해 사용자…","fields":{"slug":"/login-logics/"},"frontmatter":{"date":"February 28, 2024","update":"Feb 28, 2024","title":"🔧 로그인 로직 이해하기","description":"JWT, 세션, 쿠키 등을 이용한 로그인 로직에 대해 알아보자.","tags":["login","jwt","session","cookie"]}},{"excerpt":"컴포넌트를 분리하는 방법에는 어떤 것이 있을까? 컴포넌트를 분리하는 방법론들에 따라, 컴포넌트를 분리하는 \"기준\"이 달라지게 된다. 보통 컴포넌트를 분리하는 방법론은 아래와 같이 나뉜다. 컴포넌트의 관심사 분리(Separation of Concerns, SoC) headless 컴포넌트 SOLID, 단일 책임의 원칙 이 방법론들은 각각 어떤 기준을 가지고…","fields":{"slug":"/react-components/"},"frontmatter":{"date":"February 26, 2024","update":"Feb 26, 2024","title":"🚀 React에서 컴포넌트를 분리하는 기준","description":"컴포넌트를 어떻게 나눌까?","tags":["react","components"]}}]}},"pageContext":{}},"staticQueryHashes":[],"slicesMap":{}}