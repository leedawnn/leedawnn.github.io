{"componentChunkName":"component---src-templates-post-jsx","path":"/pure-components/","result":{"data":{"site":{"siteMetadata":{"title":"leedawn"}},"markdownRemark":{"id":"5dda7795-372e-5c0c-8354-aab58362862d","excerpt":"순수 함수란 무엇인가? 순수 함수란 사이드 이펙트가 없는 함수, 즉 함수의 실행이 외부에 영향을 끼치지 않는 함수를 뜻하고 입력으로 전달된 값을 수정하지 않는 불변성을 가지고 있다. 따라서 순수함수는 어떠한 전달인자가 주어지더라도 항상 똑같은 값이 리턴됨을 보장한다. 사이드 이펙트를 만들지 않는다. 함수는 입력받은 값만을 가지고 결과를 반환하며, 그 외 …","html":"<h2>순수 함수란 무엇인가?</h2>\n<p>순수 함수란 사이드 이펙트가 없는 함수, 즉 함수의 실행이 외부에 영향을 끼치지 않는 함수를 뜻하고 입력으로 전달된 값을 수정하지 않는 불변성을 가지고 있다. 따라서 순수함수는 어떠한 전달인자가 주어지더라도 항상 똑같은 값이 리턴됨을 보장한다.</p>\n<ul>\n<li><strong>사이드 이펙트를 만들지 않는다.</strong> 함수는 입력받은 값만을 가지고 결과를 반환하며, 그 외 어떤 외부 상태도 변경하지 않는다.</li>\n<li><strong>동일 입력, 동일 출력.</strong> 동일한 입력에 대해 순수 함수는 언제나 동일한 결과를 출력한다.</li>\n</ul>\n<h3>사이드 이펙트란?</h3>\n<p>함수의 입력 외에도 함수의 결과에 영향을 미치는 요인이다. 대표적으로 네트워크 요청,<br>\nAPI 호출이 side effect이다.</p>\n<h3>순수 함수 개념이 중요한 이유는?</h3>\n<p>사이드 이펙트를 줄이고, 모듈화 수준을 높이는 함수형 프로그래밍의 특징, 즉 순수 함수는 평가 시점이 무관하다는 특징으로 인해 효율적인 로직을 구성할 수 있다.</p>\n<h2>React에서의 순수 컴포넌트란?</h2>\n<p>React는 순수 함수를 중심으로 설계되었다. 모든 컴포넌트가 순수 함수라고 가정한다.<br>\n즉, 우리가 작성하는 React 컴포넌트는 동일한 입력이 주어졌을 때 항상 동일한 JSX를 반환해야 한다.</p>\n<p><a href=\"https://react-ko.dev/learn/keeping-components-pure\">https://react-ko.dev/learn/keeping-components-pure</a>\n<a href=\"https://github.com/sudheerj/reactjs-interview-questions?tab=readme-ov-file#what-are-pure-components\">https://github.com/sudheerj/reactjs-interview-questions?tab=readme-ov-file#what-are-pure-components</a></p>\n<p>이어서....</p>","frontmatter":{"title":"🐳 React에서의 순수 컴포넌트","date":"March 04, 2024","update":"March 04, 2024","tags":["react","pure function","components"],"series":null},"fields":{"slug":"/pure-components/","readingTime":{"minutes":2.045}}},"seriesList":{"edges":[{"node":{"id":"ccfbbea4-08d5-5f3b-87fa-bdf6e1f09d59","fields":{"slug":"/login-logics/"},"frontmatter":{"title":"🔧 로그인 로직 이해하기"}}},{"node":{"id":"5dda7795-372e-5c0c-8354-aab58362862d","fields":{"slug":"/pure-components/"},"frontmatter":{"title":"🐳 React에서의 순수 컴포넌트"}}},{"node":{"id":"bbdd17bd-3d59-59a2-aea8-c0141bf3d3c1","fields":{"slug":"/nextjs-rendering/"},"frontmatter":{"title":"↗️ Next.js의 렌더링 방식 이해하기"}}},{"node":{"id":"e1bbc6c4-39e7-51cb-a5df-f9adfed5b6fc","fields":{"slug":"/spa-mpa/"},"frontmatter":{"title":"🤔 SPA vs MPA와 SSR vs CSR"}}}]},"previous":{"fields":{"slug":"/login-logics/"},"frontmatter":{"title":"🔧 로그인 로직 이해하기"}},"next":{"fields":{"slug":"/nextjs-rendering/"},"frontmatter":{"title":"↗️ Next.js의 렌더링 방식 이해하기"}}},"pageContext":{"id":"5dda7795-372e-5c0c-8354-aab58362862d","series":null,"previousPostId":"ccfbbea4-08d5-5f3b-87fa-bdf6e1f09d59","nextPostId":"bbdd17bd-3d59-59a2-aea8-c0141bf3d3c1"}},"staticQueryHashes":[],"slicesMap":{}}